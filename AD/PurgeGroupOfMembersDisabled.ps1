<#
    Purger un groupe de ses utilisateurs desactiver
  
    usage .\PurgeGroupOfMembersDisabled.ps1 -groupName <nom du groupe cible>

    option : 
        - recusif : prends en comptes les groupes membre du groupe cible
                    .\PurgeGroupOfMembersDisabled.ps1 -groupName <nom du groupe cible> -recursif 
        - csv : Sort les resultats dans un fichier CSV
                .\PurgeGroupOfMembersDisabled.ps1 -groupName <nom du groupe cible> -csv <Chemin\nom fichier.csv>

    Limite à 5000 membres
#>
Param(
    [parameter(mandatory=$true)][string]$groupName,
    [switch]$recursif,
    [string]$csv
)

if(![bool] (Get-ADGroup -filter {name -eq $from})){
    Write-Output "nom de groupe non existant.";
    exit
}

$path = Split-Path -Path $csv

if(Test-Path -Path $path){
    Write-Output "Chemin invalide : $path";
    Write-Output "Usage : .\PurgeGroupOfMembersDisabled.ps1 -groupName <nom du groupe cible> -csv <Chemin\nom fichier.csv>";
    exit
}

if (Split-Path -Path $csv -Leaf -like "*.csv"){
    Write-Output "Nom de fichier invalide : $csv";
    Write-Output "Usage : .\PurgeGroupOfMembersDisabled.ps1 -groupName <nom du groupe cible> -csv <Chemin\nom fichier.csv>";
    exit
}

if ($recursif) {
    # recursif pour faire aussi les groupes enfants de GroupeName
    $members = Get-ADGroupMember -Identity $groupeName -Recursive
}
else {
    # seulement les membres de ce groupe 
    $members = Get-ADGroupMember -Identity $groupeName
}


 $result = ForEach-Object -InputObject $members{ 
    #Parce que get-adgroupmember ne support pas -properties
    $member = Get-ADUser -Identity $_ -Properties enabled
    if($member.Enabled -eq $False){
        # -Confirm:$false pour ne pas avoir de confirmation
        Remove-ADGroupMember -Identity $groupeName -Members $member.SamAccountName -Confirm:$false
        New-Object -TypeName PSobject -Property @{
            group = $groupeName
            membre = $member.name
            sam = $member.SamAccountName
        }
    }
} 

if ($csv) {
    if (test-path $csv){   
        $confirmation = Read-Host "Le fichier existe déjà, voulez vous l'ecraser?"
        if ($confirmation -eq 'y') {
            $result | Export-Csv -Path $csv -NoTypeInformation -Force
        }
    }
    else{
        $result | Export-Csv -Path $csv -NoTypeInformation
    }
}else{
    Write-Output "utilisateurs supprimés : $result";
}
