<#
    Add members to a Shared Mailbox
    Exchange Online

    Usage:
        - Adding members from a CSV file:
            .\AddSharedMailboxMembers.ps1 -MailboxName <list name> -CsvPath <path to CSV file>

        - Adding members from an email list:
            .\AddSharedMailboxMembers.ps1 -MailboxName <list name> -EmailList <email list>

    Parameters:
        -MailboxName: The name of the Shared Mailbox to add members to.

    CSV file format:
    The CSV file should have a header row with the column name "email" that contains the email addresses of the members to be added.

    Example CSV file contents:
    email
    user1@example.com
    user2@example.com
    user3@example.com

    Email list format:
    The email list should contain member email addresses in the format "<name> <email>; <name> <email>; ..."

    Example email list contents:
    John Doe <johndoe@example.com>; Jane Smith <janesmith@example.com>
#>

Param(
    [Parameter(Mandatory=$true)]
    [string]$MailboxName,

    [Parameter(Mandatory=$false)]
    [string]$CsvPath,

    [Parameter(Mandatory=$false)]
    [string]$EmailList
)

# Check if both CsvPath and EmailList are provided
if ($CsvPath -and $EmailList) {
    Write-Output "Please provide either CsvPath or EmailList, not both."
    exit
}
# Verify if either CsvPath or EmailList is provided
if (-not $CsvPath -and -not $EmailList) {
    Write-Output "Either CsvPath or EmailList must be provided."
    exit
}
# Check if the emails list is valid
if ($EmailList) {
    if ($EmailList -notmatch '^(\w+\s+\w+\s*<\w+@\w+\.\w+>\s*;\s*)+$') {
        Write-Output "Invalid email list format."
        exit
    }
}

Import-Module ExchangeOnlineManagement

# Connect to Exchange Online
Connect-ExchangeOnline

# Check if the Shared Mailbox exists
$mailbox = Get-Mailbox -Identity $MailboxName -ErrorAction SilentlyContinue
if (!$mailbox) {
    Write-Output "Shared Mailbox does not exist: $MailboxName"
    exit
}

$members = @()

if ($CsvPath) {
    # Import members from CSV file
    if (Test-Path -Path $CsvPath) {
        $members = Import-Csv -Path $CsvPath -Header "email" -Delimiter ";" | ForEach-Object { $_.email }
    }
    else {
        Write-Output "Invalid CSV file path: $CsvPath"
        exit
    }
}

if ($EmailList) {
    # Parse email list and add members
    $members = $EmailList -split ';' | ForEach-Object {
        $memberInfo = $_.Trim() -split '<'
        $email = $memberInfo[1].Trim('>', ' ')
        $email
    }
}

# Add members to the Shared Mailbox
foreach ($member in $members) {
    Add-MailboxPermission -Identity $MailboxName -User $member -AccessRights FullAccess -InheritanceType All
    Add-RecipientPermission -Identity $MailboxName -Trustee $member -AccessRights SendAs -Confirm:$false

    Write-Output "Member added: $member"
}

# Get members of the Shared Mailbox
Write-Output "Members of shared mailbox '$MailboxName':"
Get-MailboxPermission -Identity $MailboxName | Where-Object { $_.AccessRights -like "*FullAccess*" } | Select-Object User

# Disconnect from Exchange Online
Disconnect-ExchangeOnline -Confirm:$false
