##### pre requis
[System.Net.WebRequest]::DefaultWebProxy.Credentials = [System.Net.CredentialCache]::DefaultNetworkCredentials
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

install-Module MSonline   
import-Module MSonline 

Connect-MsolService
#####

#Fichier Source : doit avoir une colonne UserPrincipalName avec l'adresse mail
$users = Import-Csv -Path C:\temp\assignPathLicense.csv 
#-Delimiter ';' 

$collection = @()
foreach ($user in $users) {
	Write-host "Processing licenses for user $($user.UserPrincipalName)"
    #recupere l'object user sur l'ad azure a partir de l'adresse mail
	try { $user = Get-MsolUser -UserPrincipalName $user.UserPrincipalName -ErrorAction Stop }
	catch { continue }	

	$SKUs = @($user.Licenses)
	if (!$SKUs) { Write-Host "No Licenses found for user $($user.UserPrincipalName), skipping..." ; continue }

	$mcoll = “” | Select userPrincipalName, GroupID, skuid
    $mcoll.userPrincipalName = $user.UserPrincipalName

	foreach ($SKU in $SKUs) {
        #supprimer la licence si la licence n'est pas egale a celle d'un groupe du user
		if (($SKU.GroupsAssigningLicense.Guid -ieq $user.ObjectId.Guid) -or (!$SKU.GroupsAssigningLicense.Guid)) {
			Write-Host "Removing license $($Sku.AccountSkuId) from user $($user.UserPrincipalName)"
			Set-MsolUserLicense -UserPrincipalName $user.UserPrincipalName -RemoveLicenses $SKU.AccountSkuId
            
            $mcoll.GroupID = $SKU.GroupsAssigningLicense.Guid
            $mcoll.skuid = $Sku.AccountSkuId
		}
		else {
			Write-Host "License $($Sku.AccountSkuId) is assigned via Group, use the Azure AD blade to remove it!"
            $mcoll.GroupID = $SKU.GroupsAssigningLicense.Guid
            $mcoll.skuid = $Sku.AccountSkuId
			continue
		}
	}
    $collection+=$mcoll
}
#Export des licences supprimer
$collection | select userprincipalname, @{n=”Groupid”;e={$_.Groupid }}, skuid | export-csv C:\temp\licenseRemoved.csv -notypeinfo -Append
